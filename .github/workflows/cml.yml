name: Train, Test, and Deploy Iris Model with CML

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  iris-pipeline:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r requirements.txt
        pip install pytest requests

    - name: Train Model
      run: python src/train.py

    - name: Evaluate Model
      run: python src/evaluate.py

    - name: Run Unit Tests
      run: |
        pytest src/test_model.py | tee test_output.txt

    - name: Authenticate Docker with Artifact Registry
      run: |
        echo "$GCLOUD_KEY" > gcloud-key.json
        gcloud auth activate-service-account --key-file=gcloud-key.json
        gcloud config set project wise-ally-461615-t2
        gcloud auth configure-docker us-central1-docker.pkg.dev
      env:
        GCLOUD_KEY: ${{ secrets.GCLOUD_KEY }}

    - name: Build and Push Docker Image
      run: |
        docker build -t us-central1-docker.pkg.dev/wise-ally-461615-t2/iris-docker/iris-fastapi:latest .
        docker push us-central1-docker.pkg.dev/wise-ally-461615-t2/iris-docker/iris-fastapi:latest

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3

    - name: Install gke-gcloud-auth-plugin
      run: |
        sudo apt-get update
        sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

    - name: Configure kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "$KUBECONFIG" | base64 -d > $HOME/.kube/config
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}

    - name: Deploy to GKE
      run: kubectl apply -f k8s/deployment.yml

    - name: Wait for Deployment to Stabilize
      run: |
        echo "Waiting for deployment to stabilize..."
        sleep 60

    - name: Run Deployed Endpoint Test
      run: |
        python test_request.py | tee deployed_test_output.txt

    - name: Install CML
      run: npm install -g @dvcorg/cml

    - name: Post CML Report
      env:
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "##  Unit Test Results" > report.md  
        echo '```' >> report.md
        cat test_output.txt >> report.md
        echo '```' >> report.md
        echo "##  Deployed API Test Results" >> report.md  
        echo '```' >> report.md
        cat deployed_test_output.txt >> report.md
        echo '```' >> report.md
        echo "##  Metrics" >> report.md  
        cat metrics.csv >> report.md || echo "metrics.csv not found." >> report.md
        cml comment create report.md
